// <auto-generated />
using System;
using Blog.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220726155330_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Blog.Modelo.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContenidoComentario")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreComentario")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Blog.Modelo.DetalleComentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComentarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EntradaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComentarioId");

                    b.HasIndex("EntradaId");

                    b.ToTable("DetalleComentarios");
                });

            modelBuilder.Entity("Blog.Modelo.DetalleTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EntradaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EntradaId");

                    b.HasIndex("TagId");

                    b.ToTable("DetalleTags");
                });

            modelBuilder.Entity("Blog.Modelo.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContenidoEntrada")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreEntrada")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("Blog.Modelo.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreTag")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoTag")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Blog.Modelo.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EdadUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("TEXT");

                    b.Property<string>("SexoUsuario")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Blog.Modelo.Comentario", b =>
                {
                    b.HasOne("Blog.Modelo.Usuario", "Usuario")
                        .WithMany("Comentario")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Blog.Modelo.DetalleComentario", b =>
                {
                    b.HasOne("Blog.Modelo.Comentario", "Comentario")
                        .WithMany("DetalleComentario")
                        .HasForeignKey("ComentarioId");

                    b.HasOne("Blog.Modelo.Entrada", "Entrada")
                        .WithMany("DetalleComentario")
                        .HasForeignKey("EntradaId");

                    b.Navigation("Comentario");

                    b.Navigation("Entrada");
                });

            modelBuilder.Entity("Blog.Modelo.DetalleTag", b =>
                {
                    b.HasOne("Blog.Modelo.Entrada", "Entrada")
                        .WithMany("DetalleTag")
                        .HasForeignKey("EntradaId");

                    b.HasOne("Blog.Modelo.Tag", "Tag")
                        .WithMany("DetalleTag")
                        .HasForeignKey("TagId");

                    b.Navigation("Entrada");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Blog.Modelo.Entrada", b =>
                {
                    b.HasOne("Blog.Modelo.Usuario", "Usuario")
                        .WithMany("Entrada")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Blog.Modelo.Comentario", b =>
                {
                    b.Navigation("DetalleComentario");
                });

            modelBuilder.Entity("Blog.Modelo.Entrada", b =>
                {
                    b.Navigation("DetalleComentario");

                    b.Navigation("DetalleTag");
                });

            modelBuilder.Entity("Blog.Modelo.Tag", b =>
                {
                    b.Navigation("DetalleTag");
                });

            modelBuilder.Entity("Blog.Modelo.Usuario", b =>
                {
                    b.Navigation("Comentario");

                    b.Navigation("Entrada");
                });
#pragma warning restore 612, 618
        }
    }
}
